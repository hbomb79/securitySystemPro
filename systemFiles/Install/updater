local args = { ... }
errMess = 'ERROR'
cancelRequest = false
errorCatch = false
-- This is the program/script that actually re-installs all of the scripts on the computer
termX, termY = term.getSize()
elements ={}

function oldVersion()
	term.clear()
	drawTitleBar()
	printer.centered('Due To System Maintainence', 6)
	printer.centered('The updater system has been disabled', 8)
	printer.centered('until version 2.0.0 is fully released', 9)
	printer.centered('at which point you will have to reinstall', 10)
	printer.centered('your client, This will be done automatically', 11)
	printer.centered('when the update is released', 12)
	printer.centered('Running Program', 19)
	sleep(5)
	local f = fs.open('systemFiles/Programs/configuration', 'r')
	local prog = f.readLine()
	f.close()
	if prog then
		shell.run(''..prog..'')
	else
		os.shutdown()
	end
	os.shutdown()
end

function drawTitleBar()
  term.setBackgroundColor(128)
  term.setCursorPos(1,1)
  term.clearLine()
  term.setTextColor(colors.cyan)
  write "HbombOS Security Solutions"
  term.setCursorPos(1,2)
  term.clearLine()
  term.setTextColor(256)
  write "Updater"
  term.setTextColor(1)
  term.setBackgroundColor(256)
end

oldVersion() --Checks the version

function btnInit(btnText, btnWidth, btnHeight, btnX, btnY, btnTC, btnBG, oTC, oBG, onClick, toggle, secBG, secTC, secText) --Function to create button
	local btn = element.create(btnText, btnWidth, btnHeight, btnX, btnY, btnTC, btnBG, oTC, oBG, onClick, toggle, secBG, secTC, secText) --Calls API to generate button
	table.insert(elements, btn) --Inserts into table so it can be scanned later
	element.opacity(btn, true) --Sets visibility to true
	return btn
end


yes = btnInit('Update', nil, nil, termX-(#'Update' + 2), 18, 1, colors.green, 1, 256, function() downloadStart() end, false, nil, nil, nil)
no = btnInit('Dont Update', nil, nil, 2, 18, 1, colors.red, 1, 256, function() os.queueEvent('cancel') request_code = "Cancelled" return 'Cancelled' end, false, nil, nil, nil)


function PrintCentered(text, y)
	local w, h = term.getSize()
    x = math.ceil(math.ceil((w / 2) - (#text / 2)), 0)+1
    term.setCursorPos(x, y)
	term.clearLine()
    write(text)
end



function downloadStart()
	term.clear()
	drawTitleBar()
	PrintCentered("Updating...", 4)
	sleep(1)
	PrintCentered("Connection Established", 6)
	sleep(0.1)
	PrintCentered("Starting Download", 6)
	downloadStatus = downloader()
	if downloadStatus == 'Error' then
	  request_code = 'Error'
	  return 'Error'
	end
	PrintCentered("Finished Downloading Scripts", 6)
	sleep(1)
	term.clear()
	drawTitleBar()
	PrintCentered ("Thank You For Updating", 6)
	PrintCentered ("We Hope You Enjoy Your New Security Suite", 8)
	PrintCentered ("Please Report Any Bugs You Find On The Forums", 10)
	PrintCentered ("Verifying Update With GitHub..", 19)
	sleep(2)
	PrintCentered ("Press Any Key To Finish", 19)
	os.pullEvent("key")
	term.setBackgroundColor(colors.black)
	term.clear()
	term.setCursorPos(1,1)
	term.clearLine()
	os.reboot()
end

function doClick(event, btn, x, y)
	functionToRun = element.tryClick(elements, x, y)
	if functionToRun then --Check click location
		functionToRun()
	end
end


function welcome()
term.setBackgroundColor(256)
term.clear()
drawTitleBar()
PrintCentered("Welcome to the HbombOS Updater", 4)
PrintCentered("This Updater Will Guide", 6)
PrintCentered("You Through Updating Your Security Suite", 7)
element.opacity(no, true)
element.opacity(yes, true)
while true do
	local event, button, x, y = os.pullEvent()
		if event == "mouse_click" then
			doClick(event, button, x, y)
		elseif event == "cancel" then
			return 'Cancelled'
		end
end
request_code = 'Cancelled'
return
end


function downloader(quietDownload)
drawTitleBar()
PrintCentered("Downloading Scripts From GitHub... Please Wait", 6)
PrintCentered("", 19)
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/startup", "startup", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/version", "version", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Install/installer", "systemFiles/Install/installer", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Install/updater", "systemFiles/Install/updater", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot0.nfp", "systemFiles/BootLogos/boot0.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot1.nfp", "systemFiles/BootLogos/boot1.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot2.nfp", "systemFiles/BootLogos/boot2.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot3.nfp", "systemFiles/BootLogos/boot3.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot4.nfp", "systemFiles/BootLogos/boot4.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot5.nfp", "systemFiles/BootLogos/boot5.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot6.nfp", "systemFiles/BootLogos/boot6.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot7.nfp", "systemFiles/BootLogos/boot7.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/BootLogos/boot8.nfp", "systemFiles/BootLogos/boot8.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/bootFail.nfp", "systemFiles/bootFail.nfp", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/download", "api/download", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/systemCheck", "api/systemCheck", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/update", "api/update", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/printer", "/api/printer", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/titleBar", "/api/titleBar", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/errora", "/api/errora", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/LogFile", "/api/LogFile", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/api/element", "/api/element", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/README", "/Documentation/README", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/LICENSE", "/Documentation/LICENSE", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Programs/dualKey", "/systemFiles/Programs/dualKey", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Programs/keycard", "/systemFiles/Programs/keycard", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Programs/keycardDual", "/systemFiles/Programs/keycardDual", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Programs/pin", "/systemFiles/Programs/pin", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Programs/reactor", "/systemFiles/Programs/reactor", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Programs/rangeLock", "/systemFiles/Programs/rangeLock", true, 19) == 'ERROR' then return 'Error' end
if download.git("https://raw.githubusercontent.com/hbomb79/securitySystemPro/master/systemFiles/Programs/OpenPDetect", "/systemFiles/Programs/OpenPDetect", true, 19) == 'ERROR' then return 'Error' end
if quietDownload then os.reboot() else return true end
end

function main()
  if args[1] == 'quiet' then downloader(true) else welcome() end
  if cancelRequest then
	request_code = "Cancelled"
    return 'Cancelled'
  elseif errorCatch then
	request_code = "Error"
    return 'Error'
  end
end


local _, err = pcall(main) --Error Catching, All Functions Are Called From initialise() at some point...
  if err then
    if err == 'Cancelled' then return 'Cancelled' end
	if err == 'Error' then return 'Error' end
    term.setCursorBlink(false)
	errora.err(err, 'Uh Oh, Please Report The Error Code Above', true)
  end  